version: "3.8"

# Production Docker Compose configuration
# Extends base configuration with production-optimized settings

include:
  - docker-compose.base.yml

services:
  mcp-search-hub:
    env_file: 
      - .env.prod  # Use production environment file
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CACHE_TTL=${CACHE_TTL:-3600}
      - CACHE_REDIS_TTL=${CACHE_REDIS_TTL:-86400}  # 24 hours TTL for production
      - CACHE_MEMORY_TTL=${CACHE_MEMORY_TTL:-3600}  # 1 hour memory cache
      - REDIS_CACHE_ENABLED=${REDIS_CACHE_ENABLED:-true}
      - CACHE_FINGERPRINT_ENABLED=${CACHE_FINGERPRINT_ENABLED:-true}
      - CACHE_PREFIX=${CACHE_PREFIX:-search:prod:}
    build:
      target: runtime  # Use optimized runtime stage for production
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s

  redis:
    ports: []  # Don't expose Redis port in production
    command: ["redis-server", "--appendonly", "yes", "--maxmemory", "500mb", "--maxmemory-policy", "allkeys-lru"]
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 600M
        reservations:
          cpus: '0.2'
          memory: 300M
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"